{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","useState","setMovie","query","setQuery","movieToFind","setMovieToFind","inputRef","useRef","isError","setIsError","isLoading","setIsLoading","useEffect","current","focus","onSubmit","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","toLowerCase","trim","response","Title","Plot","Poster","imdbID","console","warn","finally","htmlFor","type","ref","value","onChange","target","id","placeholder","classNames","disabled","onClick","findIndex","movieItem","App","ReactDOM","render","document","getElementById"],"mappings":"uTAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SAAgDD,EAAMK,aAI1D,sBAAKJ,UAAU,UAAU,UAAQ,mBAAjC,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAS,UAAQ,WAAhC,4BC3BKC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,c,6BCFZ,IAAMC,EAA6B,SAAC,GAA2B,IAAzBH,EAAwB,EAAxBA,OAAQI,EAAgB,EAAhBA,UACnD,EAA0BC,mBAAuB,MAAjD,mBAAOf,EAAP,KAAcgB,EAAd,KACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAsCH,mBAAwB,MAA9D,mBAAOI,EAAP,KAAoBC,EAApB,KACMC,EAAWC,iBAAyB,MAE1C,EAA8BP,oBAAS,GAAvC,mBAAOQ,EAAP,KAAgBC,EAAhB,KACA,EAAkCT,oBAAS,GAA3C,mBAAOU,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACJN,EAASO,SACXP,EAASO,QAAQC,UAElB,CAAC7B,IA2DJ,OACE,qCACE,uBACEC,UAAU,aACV6B,SA7DsB,SAACC,GAE3BA,EAAMC,iBAEFf,IAAUE,IAIVF,IACFS,GAAa,GC/BZ,SAAkBT,GACvB,OAAOgB,MAAM,GAAD,OAHE,2CAGF,cAAiBhB,IAC1BiB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,uBD4BPC,CAASvB,EAAMwB,cAAcC,QAAQR,MAAK,SAACS,GACrC,UAAWA,EACbnB,GAAW,IAKbJ,EAAeH,GAEfD,EAAS,CACPX,MAAOsC,EAASC,MAChBtC,YAAaqC,EAASE,KACtB1C,OAA4B,QAApBwC,EAASG,OACb,4DACAH,EAASG,OACbtC,QAAQ,8BAAD,OAAgCmC,EAASI,QAChDnC,OAAQ+B,EAASI,aAKlBV,OAAM,kBAAMW,QAAQC,KAAK,8BACzBC,SAAQ,kBAAMxB,GAAa,OAGhCN,EAAeH,KAuBb,UAIE,sBAAKhB,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQkD,QAAQ,cAAjC,yBAIA,qBAAKlD,UAAU,UAAf,SACE,uBACE,UAAQ,aACRmD,KAAK,OACLC,IAAKhC,EACLiC,MAAOrC,EACPsC,SAtBa,SAACxB,GACxBb,EAASa,EAAMyB,OAAOF,OACtB9B,GAAW,IAqBDiC,GAAG,cACHC,YAAY,0BACZzD,UAAW0D,IACT,QACA,CAAE,YAAapC,QAKpBA,GACC,mBAAGtB,UAAU,iBAAiB,UAAQ,eAAtC,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACRmD,KAAK,SACLnD,UAAW0D,IACT,kBACA,CAAE,aAAclC,IAElBmC,UAAW3C,EAPb,4BAaDjB,GACC,qBAAKC,UAAU,UAAf,SACE,wBACE,UAAQ,YACRmD,KAAK,SACLnD,UAAU,oBACV4D,QAzEa,WACFnD,EACpBoD,WAAU,SAAAC,GAAS,OAAIA,EAAUnD,UAAV,OAAqBZ,QAArB,IAAqBA,OAArB,EAAqBA,EAAOY,WAEjC,GAAKZ,GACxBc,EAAU,GAAD,mBAAKJ,GAAL,CAAaV,KAGxBgB,EAAS,MACTI,EAAe,IACfF,EAAS,KA2DC,qCAaPlB,GACC,sBAAKC,UAAU,YAAY,UAAQ,mBAAnC,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,WEjJfgE,EAAM,WACjB,MAA4BjD,mBAAkB,IAA9C,mBAAOL,EAAP,KAAeI,EAAf,KAEA,OACE,sBAAKb,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAGtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CACEa,UAAWA,EACXJ,OAAQA,UCdlBuD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1deb412a.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState, useRef, useEffect } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\n\ntype Props = {\n  movies: Movie[],\n  setMovies: React.Dispatch<React.SetStateAction<Movie[]>>\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [movieToFind, setMovieToFind] = useState<string | null>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [movie]);\n\n  const handleSubmitionForm = (event: React.FormEvent<HTMLFormElement>\n  | React.KeyboardEvent<HTMLInputElement>) => {\n    event.preventDefault();\n\n    if (query === movieToFind) {\n      return;\n    }\n\n    if (query) {\n      setIsLoading(true);\n\n      getMovie(query.toLowerCase().trim()).then((response) => {\n        if ('Error' in response) {\n          setIsError(true);\n\n          return;\n        }\n\n        setMovieToFind(query);\n\n        setMovie({\n          title: response.Title,\n          description: response.Plot,\n          imgUrl: response.Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : response.Poster,\n          imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n          imdbId: response.imdbID,\n        });\n      })\n\n      // eslint-disable-next-line no-console\n        .catch(() => console.warn('Srver is not responding'))\n        .finally(() => setIsLoading(false));\n    }\n\n    setMovieToFind(query);\n  };\n\n  const handleAddToTheList = () => {\n    const findMovieIndex = movies\n      .findIndex(movieItem => movieItem.imdbId === movie?.imdbId);\n\n    if (findMovieIndex < 0 && movie) {\n      setMovies([...movies, movie]);\n    }\n\n    setMovie(null);\n    setMovieToFind('');\n    setQuery('');\n  };\n\n  const handleInputValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setIsError(false);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmitionForm}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              ref={inputRef}\n              value={query}\n              onChange={handleInputValue}\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                { 'is-danger': isError },\n              )}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light',\n                { 'is-loading': isLoading },\n              )}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddToTheList}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=cefde096';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          setMovies={setMovies}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}